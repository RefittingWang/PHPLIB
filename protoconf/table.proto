syntax = "proto3";

package aladinfun.planet.proto;

import "common.proto";


message EnumStringItem {
    string Name = 1;
    string Value = 2;
}

message EnumConfig {
    string EnumTypeName = 1;
    repeated EnumItem EnumItemAry = 2;
}

message EnumConfigAry {
    repeated EnumConfig ary = 1;
}

message GlobalConfig {
    uint32 StepCDTime = 1;
    uint32 X = 2;
}

message GlobalConfigAry {
    repeated GlobalConfig ary = 1;
}

message PropsConfig {
    string key = 1;
    string value = 2;
}

message PropsConfigAry {
    string key = 1;
    string value = 2;
}

// ntifier.;MainTaskPool 表中的字段 Title 无效,是不是写错了或者有大小写区分
message TaskItem {
    uint32 TaskId = 1;
    uint32 Status = 2;    //任务状态,所有任务只能增加，不能删除
    string TaskType = 3;    //任务类型，分享，邀请，消耗体力，消耗金币
    uint32 TargetTimes = 4; //完成任务需要达成的次数
    repeated Rewards Rewards = 5; //  任务奖励
    int32 RequiredStars = 6;   //  任务开启需要的星星数
    uint32 RequiredPlanetId = 7;    //任务开放岛屿
    string StartTime = 8;   //任务开始生效时间
    string EndTime = 9; //任务结束时间
    uint32 NextTaskId = 10;    //做成任务链的形式，防止调整任务顺序,只有主线任务需要
    uint32 ExtraData = 11; //任务的数据
    uint32 IslandId = 12;       // 岛屿数据
    string Title = 13;
    string Desc = 14;
    string TargetDesc = 15;
}

message MainTaskPoolConfigAry{
    repeated TaskItem ary = 1;
    //每天可以完成几个主线任务，预先把后面的两个任务也放进来统计，只是不展示
}



// 宠物2.0 解锁配置
message PetsConfig {
    uint32 id = 1;				// 宠物ID
    string name = 2;			// 宠物名称
    uint32 hourCount = 3;		// 倒计时
    string itemID = 4;			// 解锁道具ID
    uint32 itemNum = 5;			// 解锁道具数量
    string language = 6;		// 语言
}

message PetsConfigAry {
    repeated PetsConfig ary = 1;
}

message PetMixConfig {
	string petMixKey = 1;
	uint32 petMixVal = 2;
}

message PetMixConfigAry {
	repeated PetMixConfig ary = 1;
}

// 宠物技能配置
message SkillLevelsConfig {
       uint32 lv = 1;
       float value = 2;
	   float tips = 3;			// 用于显示的
}

message AutoElephantSkillConfigAry {
       repeated SkillLevelsConfig ary = 1;
}

message AutoDogSkillConfigAry {
       repeated SkillLevelsConfig ary = 1;
}

message AutoNicolasSkillConfigAry {
       repeated SkillLevelsConfig ary = 1;
}

message AutoBearSkillConfigAry {
       repeated SkillLevelsConfig ary = 1;
}

message AutoCatSkillConfigAry {
       repeated SkillLevelsConfig ary = 1;
}

// 猫的主动技能
message ManualCatSkillConfigAry {
       repeated SkillLevelsConfig ary = 1;
}

// 熊主动技能配置
message BearSkillLevelsConfig {
	uint32 lv = 1;
	float damageRate = 2;
	float coinRate = 3;
}

message ManualBearSkillConfigAry {
	repeated BearSkillLevelsConfig ary = 1;
}

// 玩具配置
message FreeCountConfig {
    uint32 freeCount = 1;		// 免费抽取次数
}

message FreeCountConfigAry {	// 这里只会有一个值的
    repeated FreeCountConfig ary = 1;
}

message PickCostConfig {		// 单纯抽蛋成本控制
    string itemID = 1;
    uint32 itemNum = 2;
	string language = 3;		// 语言
	uint32 sale = 4;			// 打折
}

message PickCostConfigAry {
    repeated PickCostConfig ary = 1;	// 抽蛋成本控制
}

message RewardConfig {			// 奖励结构体
    string itemID = 1;
    uint32 itemNum = 2;
}

message RewardConfigAry {		// 奖励列表配置
    repeated RewardConfig ary = 1;
}

// 登录奖励
message LoginRewardConfigAry {
	repeated RewardConfig ary = 1;
}

message BindRewardConfigAry {
	repeated RewardConfig ary = 1;
}
message EndRewardConfigAry {
    repeated RewardConfig ary = 1;
}
message TOYSConfig {
    uint32 id = 1;				// 玩具ID
    string name = 2;			// 玩具名称
    string pic = 3;				// 图片ID
    string description = 4;		// 描述
    uint32 star = 5;			// 星数
    string online = 6;			// 上线版本
    uint32 lvLimit = 7;			// 最高等级限制
}

message TOYSConfigAry {
    repeated TOYSConfig ary = 1;
}

message LevelsConfig {
    uint32 level = 1;			// 等级
    uint32 picId = 2;			// 图片ID
    uint32 val = 3;				// 该等级能增加的活力值
    uint32 muppet = 4;			// 下一个等级需要的布偶数
    uint32 magicSticks = 5;	// 下一个等级需要的魔法棒
    double rate = 6;			// 当前等级再次抽中玩具的概率
	float skillBonus = 7;		// 被动技能概率加成
}

// 七巧板的等级配置
message PIECE_PUZZLE_LVConfigAry {
    repeated LevelsConfig ary = 1;
}
// 狗骨头的等级配置
message DOG_BONE_LVConfigAry {
    repeated LevelsConfig ary = 1;
}
// 猫棒的等级配置
message CAT_STICK_LVConfigAry {
    repeated LevelsConfig ary = 1;
}
// 大彩球的等级配置
message COLOR_BALL_LVConfigAry {
    repeated LevelsConfig ary = 1;
}
// 小火球的等级配置
message FIRE_BALL_LVConfigAry {
    repeated LevelsConfig ary = 1;
}

// 彩蛋配置
message ToyRateConfig {
    uint32 id = 1;
    string name = 2;
    float rate = 3;		//
    float step = 4;		// 每次增加的概率
}

message ToyRateConfigAry {
    repeated ToyRateConfig ary = 1;
}


// 缩短通缉令效果
message CutTjExpireConfig {
	string sTime = 1;
	string eTime = 2;
	string platform = 3;
}

message CutTjExpireConfigAry {
	repeated CutTjExpireConfig ary = 1;
}




//许愿球活动
message OpenBottleConfigAry {
    repeated OpenBottleConfig ary = 1;
}

message OpenBottleConfig {
    uint32 weight = 1;
    uint32 rate = 2;
    string name = 3;
    uint32 value = 4;
}

message WishBallConfigAry {
    repeated WishBallConfig ary= 1;
}

message WishBallConfig {
    uint32 wishBallTotalLimit = 1;
    uint32 openBottleLimit = 2;
    uint32 wishBallGetLimit = 3;
    uint32 vitality = 4;
    repeated uint32 bottle = 5;
    repeated uint32 vitalityLimit = 6;
    uint32 minMemberLimit = 7;
    uint32 mustWeight = 8;
    uint32 mustSkill = 9;
}

message VitalityConfigAry {
    repeated VitalityConfig ary= 1;
}

message VitalityConfig {
    uint32 index = 1;
    string name = 2;
    uint32 num = 3;
    uint32 value = 4;
}

message SkillConfigAry {
    repeated SkillConfig ary= 1;
}

message SkillConfig {
    SkillType type = 1;
    uint32 iconType = 2;
    uint32 level = 3;
    uint32 time = 4;
    int32 value = 5;
    uint32 rate = 6;
}
enum SkillType {
    NONE = 0;
    RECOVER = 1;
    SHIELD = 2;
    NICOLAS = 3;
    REX = 4;
    MONEY_ENERGY = 5;
    MAGICTREE = 6;
    PIC = 7;
    MINER  = 8;
    BUILDING = 9;
    ATTACK = 10;
    PET_EXP = 11;
}

message Rewards {
    string Key = 1;
    uint32 Num = 2;
}

message FireKingRewardsConfig {
    uint32 Section = 1;
    uint32 SubSection = 5;
    uint32 MinRank = 2;
    uint32 MaxRank = 3;
    repeated Rewards Rewards = 4;
}

message FireKingRewardsConfigAry {
    repeated FireKingRewardsConfig ary = 1;
}
// 下面这个结构体好像没用到 -- 以前定义的
message FireKingSectionRewardsConfig {
    uint32 Section = 1;
    uint32 SubSection = 2;
    repeated Rewards Rewards = 3;
}

message FireKingSectionRewardsConfigAry {
    repeated FireKingRewardsConfig ary = 1;
}

message FireKingCommonConfig {
    string Name = 1;
    string Value = 2;
}

message FireKingCommonConfigAry {
    repeated FireKingCommonConfig ary = 1;
}
message FireKingSectionConfig {
    uint32 Star = 1;
    uint32 Section1 = 2;
    uint32 Section2 = 3;
    uint32 Section3 = 4;
    uint32 Section4 = 5;
    uint32 Section5 = 6;
    uint32 Section6 = 7;
    uint32 Section7 = 8;
    uint32 Section8 = 9;
    uint32 Section9 = 10;
    uint32 Section10 = 11;
    uint32 Section11 = 12;
    uint32 Section12 = 13;
}
message FireKingSectionConfigAry {
    repeated FireKingSectionConfig ary = 1;

}

message SectionRankConfig {
    float Ratio = 1;
    uint32 Section = 2;
    uint32 Star = 3;
    uint32 ScoreLimit = 4;
}
// 新炮王排名配置
message FireKingRankConfigAry {
    repeated SectionRankConfig ary = 1;
}
// 新棍子英雄排名配置
message CommonRankConfigAry {
    repeated SectionRankConfig ary = 1;
}

//后台语言翻译
message LanguageConfig {
    string Key = 1;
    string Lang = 2;
    string Value = 3;
}

message LanguageConfigAry {
    repeated LanguageConfig ary = 1;
}

//快捷支付礼包
message PhotoFramePoolConfig {
    uint32 ID = 1;
    string Name = 2;
}
message PhotoFramePoolConfigAry {
    repeated PhotoFramePoolConfig ary = 1;
}

//Bingo 活动
message BingoConfigAry{
    repeated BingoConfig ary = 1;
}
message BingoConfig{
    uint32 count = 1;
}
message BingoTiliConfigAry{
    repeated MoneyTiliRateConfig ary = 1;
}
message BingoMoneyConfigAry{
    repeated MoneyTiliRateConfig ary = 1;
}
message BingoPropsConfigAry{
    repeated PropsRateConfig ary = 1;
}
message MoneyTiliRateConfig {
    uint32 index = 1;
    uint32 rate = 2;
    uint32 value = 3;
}

message PropsRateConfig {
    uint32 index = 1;
    uint32 rate = 2;
    string name = 3;
    uint32 value = 4;
}

//快捷支付礼包
enum VIPType {
    NO = 0;
    YES = 1;
}
enum ShowType {
    HIDE = 0;
    SHOW = 1;
}
message QuickPayConfigAry {
    repeated QuickPayConfig ary = 1;
}
message QuickPayConfig {
    uint32 pid = 1;
    string props = 2;
    uint32 type = 3;
    uint32 price = 4;
    uint32 origin = 5;
    float off = 6;
    VIPType isvip = 7;
    string lang  = 8;
    ShowType show = 9;
}
message GiftProductConfigAry {
    repeated GiftProductConfig ary = 1;
}
message GiftProductConfig {
    uint32 pid = 1;
    string props = 2;
    uint32 value = 3;
}

// magicTree
message MagicTreeConfigAry {
    repeated MagicTreeConfig ary = 1;
}

message GiftBoxConfigAry{
    repeated GiftBoxConfig ary = 1;
}

message GiftBoxRewardConfigAry {
    repeated GiftBoxRewardConfig ary = 1;
}

message PicProductConfigAry {
    repeated PicProductConfig ary = 1;
}

message PicRewardConfigAry {
    repeated PicRewardConfig ary = 1;
}

message MultiMoneyConfigAry {
    repeated MultiMoneyConfig ary = 1;
}

message MagicTreeConfig {
    uint32 recover = 1;
    uint32 reserved = 2;
    uint32 magic_bottle = 3;
    uint64 ball_get = 4;
    uint32 bottle_num = 5;
    uint32 receive_limit = 6;
    uint32 send_limit = 7;
    uint32 supplement = 8;
    GiftBoxRate gift_box_rate = 9;
}

message GiftBoxRate {
    uint32 gift_box_reward = 1;
    uint32 pic_product = 2;
}

message GiftBoxConfig {
    uint32 gift_box = 1;
    uint32 gift_box_v1 = 2;
}

message GiftBoxRewardConfig {

    uint32 rate = 1;
    GiftBoxRewardItem rewards = 2;
}

message GiftBoxRewardItem {
    string key = 1;
    uint64 value = 2;
}

message PicProductConfig {
    uint32 mine = 1;
    uint32 friend = 2;
}

message PicRewardConfig {
    string index = 1;
    repeated PicRewardItem rewards = 2;
}

message PicRewardItem {
    string index = 1;
    uint32 value = 2;
}

message MultiMoneyConfig {
    int32 both = 1;
    int32 single = 2;
}

// Wheel


message WheelCardConfigAry {
    repeated WheelCardConfig ary = 1;
}
message WheelConfigAry {
    repeated WheelConfig ary = 1;
}
message WheelConfig {
    uint32 cur_planet  = 1;
    uint32 action_id  = 2;
    uint32 card_id  = 3;
    string des  = 4;
}

message WheelCardConfig {
    uint32 card_id  = 1;
    uint32 card_index  = 2;
    uint32 card_num  = 3;
    string props_name  = 4;
    uint32 props_value  = 5;
    uint32 condition  = 6;
}

// giftStore
message GiftStoreConfigAry {
    repeated GiftStoreConfig ary = 1;
}

message GiftStorePayGradeConfigAry {
    repeated GiftStorePayGradeConfig ary = 1;
}

message GiftStorePayGradeMultipleConfigAry {
    repeated GiftStorePayGradeMultipleConfig ary = 1;
}

message GiftStoreConfig {
    string channel = 1;
    string level = 2;
    string srcPid = 3;
    uint32 buyType = 4;
    uint32 price = 5;
    uint32 buyMoney = 6;
    uint32 buyTili = 7;
    uint32 image = 8;
    uint32 title = 9;
    uint32 desc = 10;
    string flag = 11;
    float off = 12;
    float dis = 13;
    uint32 step = 14;
    uint32 seq = 15;
    uint32 localPrice = 16;
    string version = 17;
    uint32 minPay = 18;
    uint32 maxPay= 19;

    repeated GiftStoreBuyItem buyItem = 20;
}

message GiftStoreBuyItem {
    string index = 1;
    uint32 value = 2;
}

message GiftStorePayGradeConfig {
    uint64 minPay = 1;
    uint64 maxPay = 2;
}

message GiftStorePayGradeMultipleConfig {
    string lang = 1;
    uint64 minPay = 2;
    uint64 maxPay = 3;
}

// 猪猪求爱配置
message PigLoveConfigAry {  // 基础配置
    repeated EnumStringItem ary = 1;
}
message PigLoveHofGridPriceConfigAry {  // 名猪堂格子
    repeated EnumItem ary = 1;
}
message PigLoveCandyRewardConfigAry {   // 糖果奖励发放
    repeated PigLoveCandyRewardConfig ary = 1;
}
message PigLovePigsConfigAry {  // 小猪类型
    repeated PigLovePigsConfig ary = 1;
}
message PigLovePigsPriceConfigAry { // 小猪价格
    repeated PigLovePigsPriceConfig ary = 1;
}
message PigLoveIlluBookPageRewardConfigAry {    // 图鉴单页奖励
    repeated PigLoveIlluBookPageRewardConfig ary = 1;
}
message PigLoveIlluBookCreditsRewardConfigAry { // 图鉴积分奖励
    repeated PigLoveIlluBookCreditsRewardConfig ary = 1;
}
message PigLoveIlluBookPagePositionsConfigAry {
    repeated PigLoveIlluBookPagePositionsConfig ary = 1;
}
message PigLoveShopConfigAry {
    repeated PigLoveShopConfig ary = 1;
}
message PigLoveCompoundConfigAry {
    repeated PigLoveCompoundConfig ary = 1;
}
message PigLoveBuyPigsConfigAry {
    repeated PigLoveBuyPigsConfig ary = 1;
}

message PigLoveCandyRewardConfig {
    uint32 minp = 1;
    uint32 maxp = 2;
    int64 money = 3;
}
message PigLovePigsConfig {
    uint32 type = 1;
    uint32 rarity = 2;
    string sex = 3;
    uint32 illuBookCredit = 4;
    uint32 pf = 5;
    uint32 pm = 6;
}
message PigLovePigsPriceConfig {
    uint32 rarity = 1;
    uint32 num = 2;
    repeated RewardItem price = 3;
}
message PigLoveIlluBookPageRewardConfig {
    uint32 page = 1;
    repeated RewardItem reward = 2;
}
message PigLoveIlluBookCreditsRewardConfig {
    uint32 index = 1;
    uint32 credit = 2;
    repeated RewardItem reward = 3;
}
message PigLoveIlluBookPagePositionsConfig {
    uint32 page = 1;
    uint32 position = 2;
    uint32 type = 3;
    string sex = 4;
}
message PigLoveShopConfig {
    uint32 type = 1;
    string sex = 2;
    uint32 money = 3;
}
message PigLoveCompoundConfig {
    uint32 pf = 1;
    uint32 pm = 2;
    uint32 pc = 3;
    uint32 weight = 4;
}
message PigLoveBuyPigsConfig {
    string type = 1;
    float weight = 2;
}

// 支付奖励
message RechargeConfigAry {
    repeated RechargeConfig ary = 1;
}

message RechargeConfig {
    string country = 1;
    string currency = 2;
    uint32 dollar = 3;
    RechargeDataItem reward = 4;
}

message RechargeDataItem {
    uint32 tili = 1;
    uint32 money = 2;
    repeated RechargeDataItemProps props = 3;
}

message RechargeDataItemProps {
    string index = 1;
    uint32 value = 2;
}

// 抓猪奖励
message CatchPigConfigAry {
    repeated CatchPigConfig ary = 1;
}
message SpecialDaysConfigAry {
    repeated SpecialDaysConfig ary = 1;
}
message RewardItemsConfigAry {
    repeated RewardItemsConfig ary = 1;
}

message CatchPigConfig {
    uint32 flushPigRand = 1;
    uint32 dailyCount = 2;
    uint32 protectCount = 3;
    uint32 rewardRandTotal = 4;
}

message SpecialDaysConfig {
    string day = 1;
    uint32 num = 2;
}

message RewardItemsConfig {
    uint32 rand = 1;
    repeated RewardItem reward = 2;
}



// 守护神模块
message NuMenPlanetConfig {
	uint32 planetId = 1;
	uint32 isOpen = 2;
}

message NuMenPlanetConfigAry {
	repeated NuMenPlanetConfig ary = 1;
}

message NuMenEnergy {
	uint32 lv = 1;
	uint32 value = 2;
}

message NuMenBuildConfig {
	string energyWay = 1;		// build, repair, beAttacked, beDefended, endBuilding
	repeated NuMenEnergy energy = 2;
}

message NuMenBuildConfigAry {
	repeated NuMenBuildConfig ary = 1;
}

message NuMenSkillCostConfigAry {
	repeated NuMenEnergy ary = 1;

}

//家族配置
message FamilyConfigAry {
    repeated EnumItem ary = 1;
}
message FamilyConfig {
    uint32 maxMembers = 1;
    uint32 deputiseLimit = 2;
    uint32 begFamilyLimit = 3;
    uint32 defaultJoin = 4;
    uint32 needStar = 5;
    uint32 kickLimit = 6;
}
//家族积分商城
message PropsRate {
    string props = 1;
    uint32 value = 2;
    uint32 rate = 3;
}
//神秘商城
message FamilySecretStoreConfigAry {
    repeated PropsRate ary = 1;
}
//能量商城
message FamilyEnergyStoreConfigAry {
    repeated PropsRate ary = 1;
}
//稀有商城
message FamilyRareStoreConfigAry {
    repeated PropsRate ary = 1;
}
// 家族奖励
message FamilyRewardConfigAry {
    repeated FamilyRewardConfig ary = 1;
}
message FamilyRewardConfig {
    string index = 1;
    uint32 activeness = 2;
    uint32 contribution = 3;
    uint32 rate = 4;
    repeated EnumItem reward = 5;
}
// 家族排行奖励
message FamilyRankRewardConfigAry {
    repeated FamilyRankRewardConfig ary = 1;
}
message FamilyRankRewardConfig {
    string rank = 1;
    repeated EnumItem reward = 5;
}

// 每日奖励
message DailyBonusConfigAry {
    repeated DailyBonusConfig ary = 1;
}
message DayLimitConfigAry {
    repeated DayLimitConfig ary = 1;
}
message SumRewardConfigAry {
    repeated SumRewardConfig ary = 1;
}
message MondayRewardConfigAry {
    repeated MondayRewardConfig ary = 1;
}

message DailyBonusConfig {
    string userType = 1;
    string rewardType = 2;
    DailyBonusRewardItem rewardItem = 3;
}
message DailyBonusRewardItem {
    uint32 num = 1;
    uint32 img = 2;
    uint32 gain = 3;
}

message DayLimitConfig {
    string start = 1;
    string end = 2;
    uint32 weekState = 3;
}

message SumRewardConfig {
    uint32 day = 1;
    repeated RewardItem reward = 2;
}

message MondayRewardConfig {
    uint32 startTime = 1;
    repeated RewardItem reward = 2;
}
//副本
message NicolasConfigAry {
    repeated EnumItem ary = 1;
}
message RexConfigAry {
    repeated EnumItem ary = 1;
}
message DungeonConfigAry {
    repeated EnumStringItem ary = 1;
}
message NicolasBonusConfigAry {
    repeated DungeonBonusConfig ary = 1;
}
message RexBonusConfigAry {
    repeated DungeonBonusConfig ary = 1;
}
message DungeonRandRewardConfigAry {
    repeated DungeonRandRewardConfig ary = 1;
}

message DungeonRandRewardConfig {
    uint32 bossId = 1;
    string type = 2;
    uint32 value= 3;
    uint32 rate = 4;
}

message DungeonBonusConfig {
    string index = 1;
    repeated DungeonBonusItem rewards = 2;
}

message DungeonBonusItem {
    string index = 1;
    uint32 value = 2;
    uint32 weight = 3;
}

// 好友召回
message CallbackConfigAry {
    repeated EnumStringItem ary = 1;
}
message CallbackStepConfigAry {
    repeated CallbackRewardConfig ary = 1;
}
message CallbackRewardConfigAry {
    repeated CallbackRewardConfig ary = 1;
}
message CallbackRewardLimitConfigAry {
    repeated EnumStringItem ary = 1;
}

message CallbackRewardConfig {
    string index = 1;
    repeated RewardItem rewards = 2;
}

// 岛屿升级奖励
message GoPlanetRewardConfigAry {
    repeated GoPlanetRewardConfig ary = 1;
}

message GoPlanetRewardConfig {
    uint32 index = 1;
    repeated RewardItem reward = 2;
}

// lucky pool
message LuckyPoolConfigAry {
    repeated LuckyPoolConfig ary = 1;
}
message LuckyPoolRewardConfigAry {
    repeated LuckyPoolRewardConfig ary = 1;
}
message LuckyPoolBigRewardConfigAry {
    repeated LuckyPoolBigRewardConfig ary = 1;
}
message LuckyPoolRateConfigAry {
    repeated LuckyPoolRateConfig ary = 1;
}

message LuckyPoolConfig {
    string startTime = 1;
    string endTime = 2;
    uint32 sumDart = 3;
    uint32 sumLogin = 4;
    uint32 beatBigCount = 5;
    uint32 beatLargeCount = 6;
    uint32 freezeTime = 7;
    uint32 refreshTmoney = 8;
    uint32 cur_planet = 9;
}

message LuckyPoolRewardConfig {
    repeated LuckyPoolRewardItem reward = 1;
}

message LuckyPoolBigRewardConfig {
    uint32 bigRand = 1;
    repeated LuckyPoolRewardItem bigReward = 2;
}

message LuckyPoolRewardItem {
    string type = 1;
    uint32 value = 2;
}

message LuckyPoolRateConfig {
    string remain = 1;
    uint32 needDart = 2;
    repeated uint32 rand = 3;
}

// Exchange Mall
message ExchangeMallConfigAry {
    repeated ExchangeMallConfig ary = 1;
}
message ExchangeMallConfig {
    uint32 index = 1;
    uint32 buyType = 2;
    uint32 price = 3;
    uint32 buyMoney = 4;
    uint32 buyTili = 5;
    uint32 image = 6;
    uint32 show = 7;
    uint32 flag = 8;
    string version = 9;
    string lang = 10;
    repeated RewardItem buyItem = 11;
}
message CommonRankRewardsConfig {
    uint32 Section = 1;
    uint32 MinRank = 2;
    uint32 MaxRank = 3;
    repeated Rewards Rewards = 4;
}
message CommonRankRewardsConfigAry {
    repeated CommonRankRewardsConfig ary = 1;
}
message CommonRankSectionRewardsConfig {
    uint32 Section = 1;
    repeated Rewards Rewards = 2;
}

message CommonRankSectionRewardsConfigAry {
    repeated CommonRankRewardsConfig ary = 1;
}

message CommonRankCommonConfig {
    string Name = 1;
    string Value = 2;
}

message CommonRankCommonConfigAry {
    repeated CommonRankCommonConfig ary = 1;
}
message CommonRankSectionConfig {
    uint32 Star = 1;
    uint32 Section1 = 2;
    uint32 Section2 = 3;
    uint32 Section3 = 4;
    uint32 Section4 = 5;
    uint32 Section5 = 6;
    uint32 Section6 = 7;
    uint32 Section7 = 8;
    uint32 Section8 = 9;
    uint32 Section9 = 10;
    uint32 Section10 = 11;
    uint32 Section11 = 12;
    uint32 Section12 = 13;
}
message CommonRankSectionConfigAry {
    repeated CommonRankSectionConfig ary = 1;

}

// 棍子玩法
message StickConfigAry {
    repeated PropsConfig ary = 1;
}
message StickRankRewardConfigAry {
    repeated StickRankRewardConfig ary = 1;
}
message StickRandomRewardConfigAry {
    repeated StickRandomRewardConfig ary = 1;
}

message StickRankRewardConfig {
    uint32 level = 1;
    repeated RewardItem reward = 3;
}

message StickRandomRewardConfig {
    string type = 1;
    string value = 2;
    uint32 rate = 3;
}

// 猪猪竞技场
message ArenaConfigAry {
    repeated PropsConfig ary = 1;
}
message ArenaRankRewardConfigAry {
    repeated ArenaRankRewardConfig ary = 1;
}
message ArenaRandomRewardConfigAry {
    repeated ArenaRandomRewardConfig ary = 1;
}

message ArenaRankRewardConfig {
    uint32 level = 1;
    repeated RewardItem reward = 3;
}

message ArenaRandomRewardConfig {
    string type = 1;
    string value = 2;
    uint32 rate = 3;
}

// 国庆七天小猪bingo活动
message NdBingoConfigAry {
    repeated PropsConfig ary = 1;
}

message NdBingoRewardConfigAry {
    repeated NdBingoRewardConfig ary = 1;
}

message NdBingoRewardConfig {
    uint32 pos = 1;
    string type = 2;
    uint32 count = 3;
    uint32 weight = 4;
    uint32 freeWeight = 5;
    uint32 level = 6;
}
//广告
message AdvertiseConfigAry {
    repeated EnumItem ary = 1;
}
message AdvertiseBonusConfigAry {
    repeated PicRewardConfig ary = 1;
}

// 召回功能配置
message TaskCondConfig {
       string condVal = 1;
       string condAnd = 2;
       string processId = 3;
       string sheetName = 4;
       string sTime = 5;
       string eTime = 6;
	   string taskId = 7;
}

message TaskCondConfigAry {
       repeated TaskCondConfig ary = 1;
}

message RecallMsgConfig {
       uint32 processKey = 1;
       string rewardId = 2;
       uint32 rewardVal = 3;
	   uint32 taskId = 4;
}

message RecallRewardConfigAry {
       repeated RecallMsgConfig ary = 1;
}

message RecallTaskConfigAry {
       repeated RecallMsgConfig ary = 1;
}

// 流失事件发送奖励
message RecallEventConfig {
	uint32 recallId = 1;	// 客户端使用
	uint32 returnDays = 2;	// 返回的第N天
	string rewardId = 3;
	uint32 rewardVal = 4;
}

message RecallEventRewardConfigAry {
	repeated RecallEventConfig ary = 1;
}


//每日任务
message TaskPoolConfig {
    string key = 1;
    uint32 weight = 2;
    repeated uint32 target = 3;
    repeated RewardItem reward = 4;
}
message TaskPoolConfigAry {
    repeated TaskPoolIslandConfig ary = 1;
}
message TaskPoolIslandConfig {
    string key = 1;
    repeated uint32 island = 2;
}
message Task1ConfigAry {
    repeated TaskPoolConfig ary = 1;
}
message Task2ConfigAry {
    repeated TaskPoolConfig ary = 1;
}
message Task3ConfigAry {
    repeated TaskPoolConfig ary = 1;
}

// 岛屿配置
message IslandConfigAry {
    repeated EnumStringItem ary = 1;
}
message IslandOnlineConfigAry {
    repeated IslandOnlineConfig ary = 1;
}
message IslandOnlineNameListConfigAry {
    repeated IslandOnlineNameListConfig ary = 1;
}

message IslandOnlineConfig {
    uint32 id = 1;
    string name = 2;
    string md5 = 3;
    string filename = 4;
    uint32 test = 5;
}
message IslandOnlineNameListConfig {
    uint32 id = 1;
    string lang = 2;
    string trans= 3;
}

// 拼图配置
message PicConfigAry {
    repeated PropsConfig ary = 1;
}

// 魔术变变变配置
message PicMagicConfigAry {
    repeated PropsConfig ary = 1;
}

// 碎片概率配置
message PicRateConfigAry {
    repeated PicRateConfig ary = 1;
}

// 金钱消耗奖励碎片配置
message PicMoneyScopeConfigAry {
    repeated PicMoneyScopeConfig ary = 1;
}

// 拼图基本奖励配置
message PicBaseRewardConfigAry {
    repeated PicBaseRewardConfig ary = 1;
}

// 拼图新奖励配置
message PicNewRewardConfigAry {
    repeated PicNewRewardConfig ary = 1;
}

// 升级拼图奖励配置
message PicUpRewardConfigAry {
    repeated PicUpRewardConfig ary = 1;
}

message PicProductMoneyConfigAry {
    repeated PicProductMoneyConfig ary = 1;
}

message PicProductMoneyConfig {
    int32 moneyScope = 1;
    int32 moneyScopeLess = 2;
}

message PicRateConfig {
    uint32 index = 1;
    uint32 rate = 2;
}

message PicMoneyScopeConfig {
    uint32 picCount = 1;
    uint32 moneyThreshold = 2;
}

message PicBaseRewardConfig {
    string type = 1;
    uint32 minCount = 2;
    uint32 maxCount = 3;
}

message PicNewRewardConfig {
    string type = 1;
    uint32 minCount = 2;
    uint32 maxCount = 3;
    uint32 rate = 4;
}

message PicUpRewardConfig {
    uint32 id = 1;
    uint32 weight = 2;
    repeated PicUpRewardItem upReward = 3;
}

message PicUpRewardItem {
    string type = 1;
    uint32 minCount = 2;
    uint32 maxCount = 3;
}

// 邀请活动
message InviteActionConfigAry {
    repeated EnumStringItem ary = 1;
}
message InviteActionRewardConfigAry {
    repeated InviteActionRewardConfig ary = 1;
}

message InviteActionRewardConfig {
    repeated RewardItem rewards = 1;
}

// 邀请奖励
message InviteConfigAry {
    repeated EnumStringItem ary = 1;
}

// 新手优化配置
message NewUserOptimizationConfigAry {
    repeated PropsConfig ary = 1;
}

// 当天指定时间推送的内容
message NewUserPushContentAtTimeConfigAry {
    repeated PushMsg ary = 1;
}

// 新用户退出登录并满足预设条件推送的内容
message NewUserPushContentAtExitConfigAry {
    repeated PushMsg ary = 1;
}

// 当天指定时间推送的奖励
message NewUserPushRewardAtTimeConfigAry {
    repeated NewUserPushReward ary = 1;
}

// 新用户退出登录并满足预设条件推送的奖励
message NewUserPushRewardAtExitConfigAry {
    repeated NewUserPushReward ary = 1;
}

message NewUserPushReward {
    string type = 1;
    uint32 count = 2;
}

message PushMsg {
    string lang = 1;
    string content = 2;
    string title = 3;
}

//转盘加倍玩法
message WheelMultipleConfigAry {
    repeated WheelMultipleConfig ary = 1;
}
message WheelMultipleConfig {
    uint32 planet = 1;
    uint32 multiple = 2;
}

message WheelActivityConfigAry {
    repeated WheelActivityConfig ary = 1;
}
message WheelActivityConfig {
    uint32 planet = 1;
    uint32 actionId  = 2;
    uint32 weight  = 3;
    string beginTime  = 4;
    string endTime  = 5;
}

message WheelConfigConfigAry {
    repeated WheelConfigConfig ary = 1;
}
message WheelConfigConfig {
    uint32 planet = 1;
    uint32 actionId  = 2;
    string type  = 3;
    uint64 value  = 4;
    uint32 weight  = 5;
}


// 用户关怀推送优化
message LeaveUserConcernConfigAry {
    repeated PropsConfig ary = 1;
}

message LeaveUserConcernPushRewardConfigAry {
    repeated LeaveUserConcernPushRewardConfig ary = 1;
}

message LeaveUserConcernPushRewardConfig {
    uint32 leaveDays = 1;
    string planetRange = 2;
    string payReward = 3;
    string unpayReward = 4;
    string pushTime = 5;
    repeated LeaveUserConcernPushItem  pushItem = 6;
}

message LeaveUserConcernPushItem {
    string lang = 1;
    uint32 isPay = 2;
    string content = 3;
}


// 消息中心配置
message MsgCenterMessageConfigAry {
    repeated MsgCenterMessageConfig ary = 1;
}

message MsgCenterMessageConfig {
    string moduleName = 1;
    string msgName = 2;
    repeated MsgCenterMessage messages = 3;
}

message MsgCenterMessage {
    string lang = 1;
    string content = 2;
}


// 尼古拉斯雪球活动
message MagicTreeDungeonConfigAry {
    repeated PropsConfig ary = 1;
}

message MagicTreeDungeonRoundConfigAry {
    repeated MagicTreeDungeonRound ary = 1;
}

message MagicTreeDungeonPushConfigAry {
    repeated MagicTreeDungeonPush ary = 1;
}

// 尼古拉斯雪球活动场次
message MagicTreeDungeonRound {
    uint32 enabled = 1;
    string startTime = 2;
    string endTime = 3;
    repeated MagicTreeDungeonReward rewards = 4;
}

// 击落怪兽奖励
message MagicTreeDungeonReward {
    string type = 1;
    uint32 count = 2;
}

message MagicTreeDungeonPush {
    string msgKey = 1;
    repeated PushMsg push = 2;
}

// 红包活动配置
message RedPacketsConfigAry {
    repeated EnumStringItem ary = 1;
}
message RedPacketsMoneyConfigAry {
    repeated RedPacketsMoneyConfig ary = 1;
}

message RedPacketsMoneyConfig {
    uint32 star = 1;
    uint32 money = 2;
    uint64 num = 3;
}
// 小猪猜猜猜活动
message DiceGuessConfigAry {
    repeated PropsConfig ary = 1;
}

message DiceProbabilityConfigAry {
    repeated DiceProbabilityConfig ary = 1;
}

message DiceProbabilityConfig {
    uint32 diceCount = 1;
    uint32 weight = 2;
    uint32 specialWeight = 3;
    string resultDesc = 4;
}

message DiceGuessRewardConfigAry {
    repeated DiceGuessRewardConfig ary = 1;
}

message DiceGuessRewardConfig {
    string guessResult = 1;
    repeated string rewards = 2;
}

message DicePropertyConfigAry {
    repeated DicePropertyConfig ary = 1;
}

message DicePropertyConfig {
    uint32 id = 1;
    string propertyName = 2;
    uint32 count = 3;
}

message DiceGuessMsgConfigAry {
    repeated DiceGuessMsgConfig ary = 1;
}

message DiceGuessMsgConfig {
    string msgName = 1;
    repeated MsgCenterMessage messages = 2;
}



//图标-运营指定显示
message ActionRankConfigAry {
    repeated ActionRankConfig ary = 1;
}

message ActionRankConfig {
    string posName = 1;
    string value = 2;
    string version = 3;
}

// 邀请随机奖励
message InviteRewardConfigAry
{
    repeated InviteRewardConfig ary = 1;
}
message InviteRewardConfig {
    repeated EnumItem reward = 1;
    uint32 rate = 2;
}

/* 套圈圈 */
// 基础配置
message PigRingConfigAry {
    repeated EnumStringItem ary = 1;
}
// 碎片配置
message PigRingPieceConfigAry
{
    repeated EnumItem ary = 1;
}
// 碎片组合
message PigRingPieceGroupConfigAry {
    repeated PigRingPieceGroupConfig ary = 1;
}

message PigRingPieceGroupConfig {
    uint32 groupId = 1;
    repeated EnumItem pieces = 2;
}
// 碎片组合奖励
message PigRingPieceGroupRewardConfigAry {
    repeated PigRingPieceGroupRewardConfig ary = 1;
}

message PigRingPieceGroupRewardConfig {
    uint32 groupId = 1;
    repeated EnumItem rewards = 2;
}
// 盒子配置
message PigRingBoxConfigAry {
    repeated PigRingBoxConfig ary = 1;
}

message PigRingBoxConfig {
    uint32 boxId = 1;
    uint32 weight = 2;
    string desc = 3;
}
// 盒子奖励配置
message PigRingBoxRewardConfigAry {
    repeated PigRingBoxRewardConfig ary = 1;
}

message PigRingBoxRewardConfig {
    uint32 boxId = 1;
    uint32 weight = 2;
    repeated PigRingBoxReward rewards = 3;
}

message PigRingBoxReward {
    string type = 1;
    uint32 min  = 2;
    uint32 max = 3;
}

// 邮件配置
message MailBoxCommonConfigAry {
    repeated FireKingCommonConfig ary = 1;
}
// 特定uid邮件
message MailBoxUidConfig {
    string mailId = 1;    // 形如 U_2017112916A , type_YmdH + diff
    string uidList = 2;   // 多个uid用英文 , 隔开
    string title = 3;
    string content = 5;
    string sTime = 7;     // 开始时间， Y-m-d H:i:s
    string eTime = 9;     // 结束时间， Y-m-d H:i:s
    string expireTime = 11;   // 有效时间: 秒，表示玩家多长时间未领取自动消失
    repeated Rewards rewards = 13;
    string sendTime = 15;     // 发送时间（手动写）， Y-m-d H:i:s
}
message MailBoxUidConfigAry {
    repeated MailBoxUidConfig ary = 1;
}
// 全服邮件
message MailBoxAllConfig {
    string mailId = 1;
    string title = 3;
    string content = 5;
    string sTime = 7;     // 开始时间， Y-m-d H:i:s
    string eTime = 9;     // 结束时间， Y-m-d H:i:s
    string expireTime = 11;   // 有效时间: 秒，表示玩家多长时间未领取自动消失
    repeated Rewards rewards = 13;
    string sendTime = 15;     // 发送时间（手动写）， Y-m-d H:i:s
}
message MailBoxAllConfigAry {
    repeated MailBoxAllConfig ary = 1;
}

// 双倍奖励
message DoubleRewardConfigAry {
    repeated DoubleRewardConfig ary = 1;
}

message DoubleRewardConfig
{
    string type = 1;
    string begtime = 2;
    string endtime = 3;
    uint32 double = 4;
}

// 世界项目引入
//世界地图 start
message ContinentListConfigAry {
    repeated ContinentListConfig ary = 1;
}

message AreaListConfigAry {
    repeated AreaListConfig   ary = 1;
}

message CityListConfigAry {
    repeated CityListConfig   ary = 1;
}

message ContinentListConfig {
    uint32 continentId     = 1;
    string continentName = 2;
}

message AreaListConfig {
    uint32 continentId = 1;
    uint32 areaId      = 2;
    string areaName  = 3;
}

message CityListConfig {
    uint32 areaId     = 1;
    uint32 cityId     = 2;
    string cityName = 3;
    string enName   = 4;
    uint32 recommendDays = 5;   //推荐天数
    string recommendSpot = 6;   //推荐景点
}
//世界地图  end


//新手任务  primTask

message PrimTaskPoolConfigAry {
    repeated PrimTaskPoolConfig ary = 1;
}

//任务池
message PrimTaskPoolConfig {
    string id        = 1;
    string name      = 2;
    string content   = 3;
    string go        = 4;
    uint32 max       = 5;
    uint32 done      = 6;
    uint32 hasReward = 7;
    uint32 finish    = 8;
    repeated RewardItem  reward = 9;
}


//每天任务排序
message PrimTaskSortConfigAry {
    repeated PrimTaskSortConfig ary = 1;
}

message PrimTaskSortConfig {
       string group = 1;
       string sort  = 2;
       string id    = 3;
}


message PrimTaskFinishRewardConfigAry {
    repeated PrimTaskFinishRewardConfig ary = 1;
}

//完成奖励
message PrimTaskFinishRewardConfig {
      string group = 1;
      repeated RewardItem finishReward = 2;
}
message FuncLimitConfig {
    uint32 Star = 1;
    string Func = 2;
}
message FuncLimitConfigAry {
    repeated FuncLimitConfig ary = 1;
}

//提醒好友上线
message BreakEggsRewardConfigAry {
    repeated BreakEggsRewardConfig ary = 1;
}
message BreakEggsRewardConfig {
    uint32 hasReward = 1;
    repeated RewardItem reward = 2;
}

message BreakEggsRateConfigAry{
    repeated BreakEggsRateConfig ary = 1;
}
message BreakEggsRateConfig{
    uint32 count = 1;
    uint32 rate  = 2;
}

message BreakEggsPicRateConfig {
    uint32 picId = 1;
    uint32 rate  = 2;
}
message BreakEggsPicRateConfigAry {
    repeated BreakEggsPicRateConfig ary = 1;
}


// message EggsConfig {
//     uint32 index = 1;
//     uint32 value = 2;
// }
// 
// 
// message EggsRatesConfig {
//     uint32   id = 1;
//     repeated EggsConfig EggsConfig = 2;
// }
// 
// message EggsRatesConfigAry {
//     repeated EggsRatesConfig ary = 2;
// }

message EggsItemList {
    uint32 id = 1;
    repeated EggsItem EggsItem = 2;   
}

message EggsRatesConfigAry {
    repeated EggsItemList ary = 1;
}


message BreakEggsIndexConfig{
    uint32 picCount     = 1;
    uint32 configIndex  = 2;
}

message BreakEggsIndexConfigAry {
    repeated BreakEggsIndexConfig ary = 1;
}

// 每日任务优化
message DailyTaskPoolConfigAry {
    repeated DailyTaskPoolConfig ary = 1;
}

message DailyTaskPoolConfig {
    string taskId = 1;
    string mutexId = 2;
    string taskType = 3;
    string condition = 4;

    repeated DailyTaskItem task = 5;
}

message DailyTaskItem {
    string planet = 1;
    string target = 2;
    uint32 weight = 3;
    string reward = 4;
}

// message DailyTaskFinishReward {}

message StealPoolConfigAry {
    repeated StealPoolConfig ary = 1;
}
message StealPoolConfig {
    uint32 id = 1;
    uint32 max  = 2;
    uint32 min = 3;
    string key  = 4;
    uint32 rand = 5;
    uint32 robot = 6;
    uint32 robotRand = 7;
}
message StealLimitConfigAry {
    repeated StealLimitConfig ary = 1;
}
message StealLimitConfig {
    uint32 limit = 1;
    uint32 time  = 2;
    uint32 protectTime = 3;
    string key  = 4;
}
message StealRandConfigAry {
    repeated StealRandConfig ary = 1;
}
message StealRandConfig {
    uint32 max = 1;
    uint32 friendNum  = 2;
    uint32 friendMaxNum = 3;
    uint32 friendRate = 4;
    uint32 planet = 5;
}
message StealRobotConfigAry {
    repeated StealRobotConfig ary = 1;
}
message StealRobotConfig {
    string key  = 1;
    uint32 limit = 2;
    uint32 minUid  = 3;
    uint32 maxUid = 4;
}

// 空岛召回消息
message AttackEmptyPlanetMsgConfigAry {
    repeated PushMsg ary = 1;
}


//元旦活动  碎片兑奖 2018福

//奖励配置
message CardRewardConfigAry {
    repeated CardRewardConfig ary = 1;
}

message CardRewardConfig {
    string cardArr = 1;
    repeated RewardItem reward = 2;
}

//累积条件
message CardConditionConfigAry {
   repeated CardConditionConfig ary = 1;
}

message CardConditionConfig {
    uint32  cardNum     = 1;
    uint32  accumulate  = 2;
}

//碎片获得概率
message CardRateConfigAry {
    repeated CardRateConfig ary = 1;
}

message CardRateConfig {
    uint32 cardId =  1;
    uint32 rate   =  2;
}


//雪球奖励调整
message  MagicTreeMultiRewardConfig {
	uint32 type  = 1;
	uint32 multi = 2;
	uint32 status = 3;
	string startTime = 4;
	string endTime = 5;
}

message MagicTreeMultiRewardConfigAry{
	repeated MagicTreeMultiRewardConfig ary = 1;
}

// V2版新手引导
message UserGuideV2ConfigAry {
    repeated PropsConfig ary = 1;
}

message UserGuideV2StepConfigAry {
    repeated UserGuideV2Step ary = 1;   // 新手引导步骤配置
}

message UserGuideV2Step {
    uint32 id = 1;     // 唯一标识步骤的id
    string desc = 2;   // 步骤描述
    string data = 3;   // 自定义data域，可存放任意格式的数据
}



//老玩家签到奖励配置
message DailySignRewardConfig {
    uint32 dayIndex = 1;        //第几天签到
    repeated RewardItem reward = 2;//奖励信息
}

message DailySignRewardConfigAry{
    repeated DailySignRewardConfig ary = 1;
}


//新手签到奖励配置
message DailySignGuideRewardConfig {
     uint32 dayIndex = 1;        //第几天签到
    repeated RewardItem reward = 2;//奖励信息
}

message DailySignGuideRewardConfigAry{
    repeated DailySignGuideRewardConfig ary = 1;
}


//分享整合
message ShareRewardConfigAry{
    repeated ShareReward ary = 1; //奖励
}
message ShareReward{
    uint32 type = 1; //分享类型
    string typeName = 2; //类型名称
    uint32 weight = 3; //权重
    repeated Rewards reward = 4;
    uint32 count = 5;
}

message MainTaskLanConfigAry{
    repeated TaskDesc ary = 1;
} 
message TaskDesc {
     string TaskId = 1;
     string lang = 2;
     string Title = 3;
     string Desc = 4;
     string TargetDesc = 5;
     bool default = 6;
}





