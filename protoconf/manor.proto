syntax = "proto3";

package aladinfun.planet.proto;
import "common.proto";

// 庄园
message ManorCommonConfigAry {
    repeated EnumItem ary = 1;
}
message ManorBuildingConfigAry {
    repeated ManorBuildingConfig ary = 1;
}
message ManorBuildingFunctionConfigAry {
    repeated ManorBuildingFunctionConfig ary = 1;
}
message ManorBuildingConfig {
    uint32 key = 1;
    uint32 id = 2;
    //   string name = 3;
    uint32 type = 4;
    uint32 prosperity = 5;       //繁荣度
    repeated uint32 preiousBuilding = 6;   //前置建筑id
    repeated uint32 preiousNum = 7;   //前置建筑数量
    repeated uint32 buildingNum = 8;   //可建造数量
    uint32 length = 9;
    uint32 width = 10;
    uint32 edit = 11;       //可否编辑
    uint32 skinId = 12;      //皮肤组id
    uint32 buildTime = 13;        //建筑建造时间
    uint32 buildSpeed = 14;        //钻石加速
    repeated RewardItem upgrade = 15;  //升级消耗
    uint32 recycle = 16;  //返还庄园货币数量
    uint32 rewardId = 17;         //掉落id
    uint64 nextAttractTime = 19; //吸引建筑 CD
    uint32 live = 20;   // 是否开放建筑
}

message WorkItem {
    uint32 index = 1;
    uint32 value = 2;
}
message ManorBuildingFunctionConfig {
    uint32 id = 1;
    //    string name = 2;
    uint32 level = 3;
    uint32 levelUp = 4;        //升级后ID
    uint32 unlockZoneId = 5;      //解锁区域
    //uint32 population = 6;       //人口
    uint32 openLimit = 7;         //开启天数
    uint32 islandLevel = 8;       //岛屿等级  主建筑需要
//    uint32 workerNum = 9;        //最大可工作的上限
//    uint32 eventId = 10;   //事件组ID
    WorkItem workItem = 11;  //工作时间对应加速完成的配置
    repeated uint32 rewardId = 12;         //掉落id
    repeated uint32 consumeId = 13; // 消耗道具组id
}

//掉落奖励表
message ManorRewardConfigAry {
    repeated ManorRewardConfig ary = 1;
}
message ManorRewardConfig {
    uint32 id = 1;
    uint32 type = 2;
    uint32 rewardId = 3;
    uint32 rewardNum = 4;
    uint32 weights = 5;
}

//科技研究院
message ManorLabConfigAry {
    repeated ManorLabConfig ary = 1;
}
message ManorLabConfig {
    uint32 id = 1;       //建筑id
    uint32 propsId = 2;  //卡牌道具id
    uint32 limit = 3;
    uint32 expired = 4;
    repeated RewardItem item = 5;
}

//建筑初始化
message ManorBuildingInitConfigAry {
    repeated ManorBuildingInitConfig ary = 1;
}
message ManorBuildingInitConfig {
    uint32 key = 1;
    uint32 x = 2;
    uint32 y = 3;
}
message ManorZoneConfigAry {
    repeated ManorZoneConfig ary = 1;
}
message ManorZoneConfig {
    uint32 id = 1;
    uint32 level = 2;
    uint32 rewardId = 3;
    uint32 rewardNum = 4;
    uint32 x = 5;
    uint32 y = 6;
    uint32 length = 7;
    uint32 width = 8;
}
message ManorSkinConfigAry {
    repeated ManorSkinConfig ary = 1;
}
message ManorSkinConfig {
    uint32 id = 1;
    repeated uint32 skin = 2;
}
// 庄园猪猪配置
message ManorPigConfigAry {
    repeated ManorPigConfig ary = 1;
}
message ManorPigConfig {
    uint32 id = 1;
    uint32 type = 2;
    uint32 skill = 3;
    uint32 star = 5;
    uint32 population = 6;
    uint32 blackPic = 7;
    uint32 resource = 8;
    uint32 building = 9;
    uint32 expire = 10;
    repeated uint32 consumeId = 11;
    repeated uint32 rate = 12;
    uint32 emotionHappyTime = 13;
    string appearance = 14;
    repeated uint32 rewardId = 15;
}

// 图鉴
message ManorPigIllustratedConfigAry {
    repeated ManorPigIllustratedConfig ary = 1;
}
message ManorPigIllustratedConfig {
    uint32 id = 1;
    uint32 photoID = 2;
    uint32 photoIcon = 3;
    uint32 limit = 4;
    uint32 prosperity = 5;
    repeated uint32 rewardId = 6;
}

//合成公式
message ManorPigFormulaConfigAry {
    repeated ManorPigFormulaConfig ary = 1;
}
message ManorPigFormulaConfig {
    uint32 id = 1;
    uint32 pig1 = 2;
    uint32 pig2 = 3;
    uint32 result = 4;
    uint32 rewardId = 5;
    uint32 level = 6;          //基因站等级
}

message ManorPigSkillConfigAry {
    repeated ManorPigSkillConfig ary = 1;
}
// 技能库配置
message ManorPigSkillConfig {
    uint32 skillId = 1;
    //    string name = 2;
    //    string description = 3;
    string icon = 2;
    uint32 key = 3;
    uint32 percentage = 4;
}
// 服饰资源配置
message ManorResourceConfigAry {
    repeated ManorResourceConfig ary = 1;
}
message ManorResourceConfig {
    uint32 id = 1;
    string resourceId = 2;
    uint32 prosperity = 3;       //繁荣度 (买皮肤)
    repeated RewardItem unlockResource = 4;  // 解锁消耗
    uint32 subId = 5;  // 子id
}
// 道具表
message ManorPropsConfigAry {
    repeated ManorPropsConfig ary = 1;
}
message ManorPropsConfig {
    uint32 id = 1;
    string name = 2;
    string des = 3;
    uint32 stack = 4;
    uint32 pack = 5;
    uint32 type = 6;
    repeated uint32 rewardId = 7;
    uint32 quality = 8;
}


// Manor Mall
message ManorMallConfigAry {
    repeated ManorMallConfig ary = 1;
}
message ManorMallConfig {
    uint32 id = 1;
    uint32 buyType = 2;
    repeated RewardItem price = 3;
    uint32 image = 4;
    uint32 show = 5;
    uint32 flag = 6;
    string version = 7;
    string lang = 8;
    repeated RewardItem buyItem = 9;
}

message ManorConsumeGroupConfigAry {
    repeated ManorConsumeGroupConfig ary = 1;
}

message ManorConsumeGroupConfig {
    uint32 id = 1;
    uint32 propId = 3;
    uint64 propNum = 4;
    uint32 weight = 5;
}

message ManorOrder {
    uint32 level = 1;       // 主建筑等级
    uint32 num = 2;         // 刷新任务数量
    uint32 base = 3;        // 基础奖励
    uint32 time = 4;        // 任务时长
    uint32 timeMultiple = 5;// 时长倍数
    uint32 timeWeight = 6;  // 时长权重
    uint32 pigNum = 7;      // 猪数量
    uint32 pigMultiple = 8; // 猪数量倍数
    uint32 pigWeight = 9;   // 猪数量权重
}

message ManorOrderTask {
    uint32 id = 1;
    uint32 buildId= 2;
    string title = 3;
    string desc = 4;
}

message ManorNeighborhoodConfigAry {
    repeated ManorNeighborhood ary = 1;
}
message ManorNeighborhood {
    uint32 id = 1;
    uint64 robot = 2;
}